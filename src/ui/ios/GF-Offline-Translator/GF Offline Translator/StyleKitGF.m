//
//  StyleKitGF.m
//  GF Offline Translator
//
//  Created by Cenny Davidsson on 2015-06-19.
//  Copyright (c) 2015 Grammatical Framework. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKitGF.h"


@implementation StyleKitGF

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawArrowsWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0.478 blue: 1 alpha: 1];

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77855 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53483 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31140 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53483 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.31140 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45788 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77855 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45788 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77855 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53483 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77855 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34247 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77855 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.64384 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.95436 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50918 * CGRectGetHeight(frame))];
    [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.77855 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34247 * CGRectGetHeight(frame))];
    [bezierPath closePath];
    [color setFill];
    [bezierPath fill];


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53483 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.68880 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53483 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.68880 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45788 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45788 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53483 * CGRectGetHeight(frame))];
    [bezier2Path closePath];
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34247 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.64384 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.04979 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.50918 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.22452 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.34247 * CGRectGetHeight(frame))];
    [bezier2Path closePath];
    [color setFill];
    [bezier2Path fill];
}

+ (void)drawMenyItemWithFrame: (CGRect)frame
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0.478 blue: 1 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + 1, CGRectGetMinY(frame) + 3, floor((CGRectGetWidth(frame) - 1) * 0.28037 + 0.5), CGRectGetHeight(frame) - 6)];
    [color setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.36111 + 0.5), CGRectGetMinY(frame) + 3, floor(CGRectGetWidth(frame) * 0.63889 + 0.5) - floor(CGRectGetWidth(frame) * 0.36111 + 0.5), CGRectGetHeight(frame) - 6)];
    [color setFill];
    [oval2Path fill];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + floor((CGRectGetWidth(frame) - 2) * 0.71698 + 0.5), CGRectGetMinY(frame) + 3, CGRectGetWidth(frame) - 2 - floor((CGRectGetWidth(frame) - 2) * 0.71698 + 0.5), CGRectGetHeight(frame) - 6)];
    [color setFill];
    [oval3Path fill];
}

@end
